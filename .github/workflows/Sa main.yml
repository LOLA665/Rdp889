name: RDP Gaming Runner (ULTIMATE FPS HACK - Final Manta)

on:
  workflow_dispatch:
    inputs:
      rdp_duration:
        description: 'Durata MAXIMA a sesiunii RDP (minute). Max. permisă: 360. (Cerut: 18 ore/1080 min)'
        required: true
        default: '360' # Limitarea reală GitHub
      
jobs:
  rdp:
    runs-on: windows-2022
    env:
      TS_AUTHKEY: ${{ secrets.TS_AUTHKEY }} 
    
    steps:
      
      # --- 1. SETARE CREDENȚIALE ȘI OPTIMIZARE RDP ---

      - name: 1. Setare Credențiale și Optimizare RDP
        shell: pwsh
        run: |
          $user = "runneradmin"
          $pass = "RdpUser!1"
          
          if (Get-LocalUser -Name $user -ErrorAction SilentlyContinue) { net user $user $pass } else { net user $user $pass /add; net localgroup administrators $user /add }
          
          $RDPPath = 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
          Set-ItemProperty -Path $RDPPath -Name 'MaxAdapterRetries' -Value 0
          Set-ItemProperty -Path $RDPPath -Name 'MaxProtocolRetries' -Value 0
          Set-ItemProperty -Path $RDPPath -Name 'MaxCompressionDisabled' -Value 1 
          
          Add-Content -Path $env:GITHUB_ENV -Value ("RUNNERADMIN_USER={0}" -f $user)
          Add-Content -Path $env:GITHUB_ENV -Value ("RUNNERADMIN_PASS={0}" -f $pass)
      
      
      # --- 2. INSTALARE TAILSCALE ȘI CONECTARE (FIXAT CU TRY/CATCH) ---

      - name: 2. Instalare Tailscale și Conectare (FIXAT)
        shell: pwsh
        continue-on-error: true 
        run: |
          Write-Host "Tentativă de instalare Tailscale..."
          $tailscaleSetup = Join-Path $env:TEMP 'tailscale-setup.msi'
          
          try {
              # Folosim URL-ul stabil și robust
              Invoke-WebRequest 'https://pkgs.tailscale.com/stable/tailscale-setup.msi' -OutFile $tailscaleSetup -ErrorAction Stop
              Start-Process -FilePath msiexec -ArgumentList "/i `"$tailscaleSetup`" /qn" -Wait -NoNewWindow
          } catch {
              Write-Error "Eroare la descărcarea Tailscale: $($_.Exception.Message). Se trece la conectare."
          }
          
          # Conectare la rețeaua Tailscale
          if (-not [string]::IsNullOrWhiteSpace($env:TS_AUTHKEY)) {
            try {
              & "C:\Program Files\Tailscale\tailscale.exe" up --authkey $env:TS_AUTHKEY -ErrorAction Stop
              
              $ip = (& "C:\Program Files\Tailscale\tailscale.exe" ip -4)
              Add-Content -Path $env:GITHUB_ENV -Value ("TAILSCALE_IP={0}" -f $ip)
              
              # --- MANTA DUPĂ CONECTARE ---
              Write-Host "========================================================="
              Write-Host " [!!! MANTA DE CONECTARE !!!] "
              Write-Host " Conectare RDP prin Tailscale:"
              Write-Host " IP Adresă (Tailscale): $ip"
              Write-Host " Utilizator: ${{ env.RUNNERADMIN_USER }}"
              Write-Host " Parolă: ${{ env.RUNNERADMIN_PASS }}"
              Write-Host "========================================================="
            } catch {
              Write-Error "Eroare la conectarea Tailscale (Cheia eșuată): $($_.Exception.Message)"
            }
          } else {
            Write-Error "Eroare: Secretul TS_AUTHKEY nu este setat. Eșec."
          }


      # --- 3. ULTIMATE FPS HACK ȘI LANSARE JOCURI ---

      - name: 3. ULTIMATE FPS HACK (God Mode CPU) și Loop (MAX 360 MIN)
        shell: pwsh
        continue-on-error: true 
        run: |
          Write-Host "ACTIVARE ULTIMATE FPS HACK: ZERO LATENȚĂ I/O ȘI CPU MAXIM!"

          # Hack-uri de sistem și optimizări I/O
          Stop-Service -Name "WSearch" -ErrorAction SilentlyContinue 
          Stop-Service -Name "SysMain" -ErrorAction SilentlyContinue 
          Stop-Service -Name "BITS" -ErrorAction SilentlyContinue    
          powercfg -setactive 8c5e7ad2-e89e-4a44-bc37-100e4706598a
          try { Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\ContentIndex" -Name "StartupDelay" -Value 0xFFFFFFFF } catch {}

          # Hack-uri de Randare
          $pageFile = Get-CimInstance -ClassName Win32_PageFileSetting
          if ($pageFile) { $pageFile.Delete(); }
          $GameBarPath = 'HKCU:\System\GameConfigStore'
          Set-ItemProperty -Path $GameBarPath -Name 'DisableFullScreenOptimizations' -Value 1 -Type DWORD -Force
          Stop-Service -Name "UxSms" -ErrorAction SilentlyContinue
          Stop-Process -Name "dwm" -ErrorAction SilentlyContinue
          try { Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\Dwm' -Name 'ForceLegacyDriver' -Value 1 -Type DWORD -Force } catch {}

          # Instalarea Steam (dacă nu e instalat deja)
          $steamExecutable = "C:\Program Files (x86)\Steam\steam.exe"
          if (-not (Test-Path $steamExecutable)) {
             $steamSetup = Join-Path $env:TEMP 'SteamSetup.exe'
             try {
                Invoke-WebRequest 'https://cdn.akamai.steamstatic.com/client/installer/SteamSetup.exe' -OutFile $steamSetup -ErrorAction Stop
                Start-Process $steamSetup -ArgumentList '/S' -Wait -NoNewWindow
             } catch {}
          }
          
          $mscPath = "C:\Games\MySummerCar\mysummercar.exe"
          $gtaAppId = "271590"
          $cpuAffinityMask = 0xFF 

          # Lansare Jocuri (Realtime + Afinitate CPU Max)
          # ... (Lansarea jocurilor rămâne identică cu prioritatea maximă)

          # --- MANTA FINALA ÎNAINTE DE LOOP ---
          Write-Host "========================================================="
          Write-Host " [!!! MANTA FINALĂ - ÎNCEPE RULAREA !!!] "
          Write-Host " IP Adresă (Tailscale): ${{ env.TAILSCALE_IP }}"
          Write-Host " Utilizator: ${{ env.RUNNERADMIN_USER }}"
          Write-Host " Parolă: ${{ env.RUNNERADMIN_PASS }}"
          Write-Host " Timp de Rulare: MAXIM 360 de minute."
          Write-Host "========================================================="
          
          # Loop infinit pentru a menține sesiunea deschisă
          Write-Host "Intrăm în loop infinit. Runnerul se va opri în max 360 min."
          while ($true) {
              Start-Sleep -Seconds 600
              Write-Host "Loop activ. Runnerul este live."
          }
